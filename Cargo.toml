[package]
name = "cpuidrs"
version = "0.1.0"
edition = "2021"
license = "MIT OR Apache-2.0"
description = "A comprehensive Rust library for CPUID instruction decoding, providing a simple API to query CPU features across multiple architectures. Easily integrate hardware detection and instruction set support into your projects."
homepage = "https://github.com/SturdyFool10/cpuidrs"
repository = "https://github.com/SturdyFool10/cpuidrs"
readme = "readme.md"
keywords = ["cpuid", "cpu", "instruction-set", "hardware", "rust"]
categories = ["hardware-support", "no-std", "os"]

[features]
default = ["std"]
std = []
baremetal = []

[dependencies]
# OS integration: libc for Unix, winapi for Windows
libc = "0.2"
winapi = { version = "0.3", features = ["sysinfoapi", "processthreadsapi", "winbase"] }
num_cpus = "1.13"
raw-cpuid = "9.0"
cc = "1.2.29"
bitflags = "2.9.1"
once_cell = "1.21.3"

[build-dependencies]
cc = "1.2.29"

[dev-dependencies]
# For testing on hosted targets

[lib]
crate-type = ["rlib", "cdylib"]
